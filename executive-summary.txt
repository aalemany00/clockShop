Assignment name: Assignment 1
TCSS 305 C: Programming Practicum, Winter 2023

Name: Adrian Alemany
UWNetID: aalemany


Assignment Overview:
    This assignment involved creating two classes: Clock and ClockShop.
The Clock class represents a 24-hour time with validation and implements
Comparable for sorting. The ClockShop class manages a collection of Clock
objects stored in an ArrayList, with functionality to read clock times from
files, sort them, and write them back to files. The assignment focused on
file Input and Output, implementing custom sorting algorithms, proper
encapsulation, and exception usage.

    I completed two extra credit features: using specific delimiters (colon
and newline) with Scanner for file reading, and executing setToCurrentTime()
that uses System.currentTimeMillis() and Calendar to set a clock to the current
system time. In total, I have spent about 10 - 11 hours working on this coding assignment.

Technical Impression:
    I started by creating the Clock class, making sure all validation and
methods worked correctly before moving on to ClockShop. The most challenging
part of this assignment was figuring out how to use Scanner and file to
make ClockShop work properly. I struggled with understanding how to set up the
correct file paths and how Scanner's delimiter patterns work. It took some
serious effort to realize the test files needed to be in the right directory
and that the delimiter pattern needed to account for different line ending formats
(\r\n for Windows).
    Another major difficulty was writing the advanceMinute() method correctly.
My initial approach replaced the minute value instead of adding to it, which
failed the tests. I had to think through the logic of calculating total minutes,
determining how many hours to advance, and setting the remaining minutes using
% operations.
    The equals() method also gave me trouble because I initially wrote the instanceof
check incorrectly. This helped me better understand proper type checking in Java.
For sorting, I implemented selection sort since I thought it was the easiest. Writing
my own sort without using Java's built-in methods helped me remember how to sort data
and how compareTo() works.
    For the extra credit features, I needed to search online for solutions to
understand how to properly implement them. The delimiter modification required
learning about ":|\\r\\n" for Windows line endings. The setToCurrentTime()
method required research into System.currentTimeMillis() and how Java's
Calendar class handles time and timezones. I initially tried manual calculations
but found that using Calendar's built-in methods was more reliable.
    Overall, this assignment helped me understand file handling, how to write code
to satisfy tests, Java principles, and the importance of thorough testing.

Unresolved problems in my submission:
None

Citations and Collaborations:
1) For Calendar:
https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Calendar.html

2)Scanner and File:
https://www.w3schools.com/java/java_ref_scanner.asp

3) Local Time from Computer:
https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/LocalTime.html

4) Long
https://docs.oracle.com/en/java/javase/25/docs/api/java.base/java/lang/Long.html

5) Javadoc comments
https://claude.ai

Extra Credit:
Extra Credit #1: Modified Scanner Delimiter
Modified fillClockShop() to use myScanner.useDelimiter(":|\\r\\n") which splits input
on colons and newline characters. Used myScanner.nextInt() to read hours, minutes, and
seconds from the file.

Extra Credit #2: setToCurrentTime() Method
Created setToCurrentTime() in the Clock class that uses System.currentTimeMillis() as
the starting point, creates a Calendar instance with Calendar.getInstance(), sets it
using calendar.setTimeInMillis(currentTimeMillis),then pulls out the hour, minute, and
second values using calendar.get(). CreatedTestCurrentTime class to verify it works by
comparing against system time.

Questions:
None

